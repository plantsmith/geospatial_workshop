---
title: "Geospatial Raster and Vector Workshop (Day 2)"
author: "Natalie Smith"
format: html
editor: visual
---

# Open Plot and Vector Layers

We will use the sf package to work with vector data in R. We will also use the terra package, which has been loaded in previous episodes, so we can explore raster and vector spatial metadata using similar commands. Make sure you have the sf library loaded.

```{r}
library(sf)
library(tidyverse)
library(terra)
library(dplyr)
```

```{r}
# Load the vector data:
aoi_boundary_HARV <- st_read("data/NEON-DS-Site-Layout-Files/HARV/HarClip_UTMZ18.shp")
```

We see that we ESRI shapefile, that is a polygon, with a bouncing box, and a CRS (WGS 84 / UTM zone 18N) 

```{r}
# # other ways to check metadatra:
# st_geometry_type() 
# # The type of vector data stored in the object.
# nrow()
# #The number of features in the object
# st_bbox()
# #The spatial extent (geographic area covered by) of the object.
# st_crs()
# #The CRS (spatial projection) of the data.
```


```{r}
# Plot the bounding box of the forest yeild site:
ggplot() +
  geom_sf(data = aoi_boundary_HARV, size = 3, color = "black", fill = "dodgerblue") +
  ggtitle("AOI Boundary Plot") +
  coord_sf()
```

```{r}
# Load the (point and line) vector data:
lines_HARV <- st_read("data/NEON-DS-Site-Layout-Files/HARV/HARV_roads.shp", stringsAsFactors = TRUE)
# String As Factor =. forces everytihng to be a factor that is text
point_HARV <- st_read("data/NEON-DS-Site-Layout-Files/HARV/HARVtower_UTM18N.shp")
```

# Explore and Plot by Vector Layer Attributes (Visualize by Attrubute)

If I'm going to symbolize by attribute, how many do I have to choose from?
```{r}
# how many columns and what are there names?
ncol(lines_HARV)
# We have 16 to choose from
names(lines_HARV)
# [1] "OBJECTID_1" "OBJECTID"   "TYPE"       "NOTES"      "MISCNOTES"  "RULEID"     "MAPLABEL"   "SHAPE_LENG"
#  [9] "LABEL"      "BIKEHORSE"  "RESVEHICLE" "RECMAP"     "Shape_Le_1" "ResVehic_1" "BicyclesHo" "geometry"  
str(lines_HARV$geometry)
#geometry 
```

How many columns and lines are in the roads file?
```{r}
ncol(lines_HARV)
#15
nrow(lines_HARV)
#13
```

Who owns the site in the point_HARV data object? What county?
```{r}
str(point_HARV)
 # $ Ownership : chr "Harvard University, LTER"
 # $ County    : chr "Worcester"
```


```{r}
#check to see if it's actually a factor
class(lines_HARV$TYPE)
```

Filter stuff:
```{r}
footpath_HARV <- lines_HARV %>%
  filter(TYPE == "footpath")

nrow(footpath_HARV)
#there are 2 footpaths
```

```{r}
#plot the footpaths
ggplot() +
  geom_sf(data = footpath_HARV) +
  ggtitle("NEON Harvard Forest", subtitle = "Two Paths in the Woods")
```

```{r}
# two colors for the paths
ggplot() +
  geom_sf(data = footpath_HARV, aes(color = factor(OBJECTID)), size = 1.5) +
  labs(color = 'Footpath ID') +
  ggtitle("NEON Harvard Forest Field Site", subtitle = "Footpaths") +
  coord_sf()
```

```{r}
#more features from filter
boardwalk_HARV <- lines_HARV %>%
  filter(TYPE == "boardwalk")

walls_HARV <- lines_HARV %>%
  filter(TYPE == "walls")
```


```{r}
#symbolizre by size of symbol and random set of colors
line_widths <- c(1, 2, 3, 4)
road_colors <- c("blue", "pink", "red", "brown")

ggplot() +
  geom_sf(data = lines_HARV, 
          aes(color = TYPE, linewidth = TYPE)) + 
  scale_color_manual(values = road_colors) + 
  scale_discrete_manual("linewidth", values=line_widths)+
  ggtitle("NEON Harvard Forest Field Site", subtitle = "Vary the Lines!") + 
  coord_sf()
```
```{r}
#box around the legend:
ggplot() +
  geom_sf(data = lines_HARV, aes(color = TYPE), size = 1.5) +
  scale_color_manual(values = road_colors) +
  labs(color = 'Road Type') +
  theme(legend.text = element_text(size = 20),
        legend.box.background = element_rect(size = 1)) +
  ggtitle("NEON Harvard Forest Field Site",
          subtitle = "Roads & Trails - Modified Legend") +
  coord_sf()
```
Create a plot that emphasizes only roads where bicycles and horses are allowed. To emphasize this, make the lines where bicycles are not allowed THINNER than the roads where bicycles are allowed. NOTE: this attribute information is located in the lines_HARV$BicyclesHo attribute.

```{r}
lines_HARV %>%
  pull(BicyclesHo) %>%
  unique()

#Now, we can create a data frame with only those roads where bicycles and horses are allowed.

lines_showHarv <-
  lines_HARV %>%
  filter(BicyclesHo == "Bicycles and Horses Allowed")

#Finally, we plot the needed roads after setting them to magenta and a thicker line width.

ggplot() +
  geom_sf(data = lines_HARV) +
  geom_sf(data = lines_showHarv, aes(color = BicyclesHo), size = 2) +
  scale_color_manual(values = "magenta") +
  ggtitle("NEON Harvard Forest Field Site",
          subtitle = "Roads Where Bikes and Horses Are Allowed") +
  coord_sf()
```

Create a map of the state boundaries in the United States using the data located in your downloaded data folder: Apply a line color to each state using its region value. Add a legend.
```{r}
state_boundary_US <-st_read("data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp") %>% 
  st_zm()
# NOTE: We need neither Z nor M coordinates!
```

```{r}
state_boundary_US$region <- as.factor(state_boundary_US$region)
levels(state_boundary_US$region)
```

```{r}
colors <- c("purple", "springgreen", "orangered", "brown", "navy")
```

```{r}
ggplot() +
  geom_sf(data = state_boundary_US, 
          aes(fill = region), color = "white", linewidth = 0.5) +
  scale_fill_manual(values = colors) +
  ggtitle("Contiguous U.S. State Boundaries") +
  coord_sf() +
  theme_void()
```

# Plot Multiple Vector Layers

```{r}
ggplot() +
  geom_sf(data = aoi_boundary_HARV, fill = "grey", color = "grey") +
  geom_sf(data = point_HARV, aes(fill = Sub_Type), shape = 15) +
  geom_sf(data = lines_HARV, aes(color = TYPE),
          show.legend = "line", size = 1) +
  scale_color_manual(values = road_colors, name = "Line Type") +
  scale_fill_manual(values = "black", name = "Tower Location") +
  ggtitle("NEON Harvard Forest Field Site") +
  coord_sf()
```

